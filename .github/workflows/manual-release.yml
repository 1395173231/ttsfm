name: Manual Release

on:
  workflow_dispatch:
    inputs:
      version:
        description: 'Version to release (e.g., 3.0.1)'
        required: true
        type: string

jobs:
  test:
    runs-on: ubuntu-latest

    steps:
    - uses: actions/checkout@v4

    - name: Set up Python
      uses: actions/setup-python@v4
      with:
        python-version: '3.11'

    - name: Install dependencies
      run: |
        python -m pip install --upgrade pip
        pip install -e .

    - name: Run basic tests
      run: |
        python -c "import ttsfm; print(f'TTSFM imported successfully')"
        python -c "from ttsfm import TTSClient; print('TTSClient imported successfully')"

  build-and-release:
    needs: test
    runs-on: ubuntu-latest

    steps:
    - uses: actions/checkout@v4
      with:
        token: ${{ secrets.GITHUB_TOKEN }}

    - name: Set up Python
      uses: actions/setup-python@v4
      with:
        python-version: '3.11'

    - name: Update version
      run: |
        VERSION="${{ github.event.inputs.version }}"
        sed -i "s/^version = .*/version = \"$VERSION\"/" pyproject.toml

        # Update __init__.py if it exists
        if [ -f "ttsfm/__init__.py" ]; then
          sed -i "s/__version__ = .*/__version__ = \"$VERSION\"/" ttsfm/__init__.py
        fi

    - name: Commit version update
      run: |
        git config --local user.email "action@github.com"
        git config --local user.name "GitHub Action"
        git add pyproject.toml ttsfm/__init__.py
        git commit -m "bump: version ${{ github.event.inputs.version }}" || exit 0
        git push

    - name: Install build dependencies
      run: |
        python -m pip install --upgrade pip
        pip install build twine

    - name: Build package
      run: |
        python -m build

    - name: Check package
      run: |
        twine check dist/*
        ls -la dist/

    - name: Publish to PyPI
      uses: pypa/gh-action-pypi-publish@release/v1
      with:
        password: ${{ secrets.PYPI_API_TOKEN }}

    - name: Create and push tag
      run: |
        git tag "v${{ github.event.inputs.version }}"
        git push origin "v${{ github.event.inputs.version }}"

    - name: Create GitHub Release
      uses: softprops/action-gh-release@v1
      with:
        tag_name: v${{ github.event.inputs.version }}
        name: TTSFM v${{ github.event.inputs.version }}
        body: |
          ## TTSFM v${{ github.event.inputs.version }}

          Manual release of TTSFM package.

          ### Installation
          ```bash
          pip install ttsfm==${{ github.event.inputs.version }}
          ```

          ### Features
          - Text-to-Speech API client with OpenAI compatibility
          - Support for multiple voices and audio formats
          - Async and sync interfaces
          - Web interface for testing

          ### Documentation
          See [GitHub repository](https://github.com/dbccccccc/ttsfm) for full documentation.
        draft: false
        prerelease: false

    - name: Verify installation
      run: |
        echo "Waiting 30 seconds for PyPI to update..."
        sleep 30

        pip install ttsfm==${{ github.event.inputs.version }}
        python -c "import ttsfm; print(f'âœ… PyPI installation successful! Version: {ttsfm.__version__}')"
