name: Release to PyPI

on:
  push:
    tags:
      - 'v*'  # Triggers on version tags like v1.0.0, v3.0.0, etc.

jobs:
  test:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        python-version: [3.8, 3.9, '3.10', '3.11', '3.12']

    steps:
    - uses: actions/checkout@v4

    - name: Set up Python ${{ matrix.python-version }}
      uses: actions/setup-python@v4
      with:
        python-version: ${{ matrix.python-version }}

    - name: Install dependencies
      run: |
        python -m pip install --upgrade pip
        pip install -e .

    - name: Test package import
      run: |
        python -c "import ttsfm; print(f'TTSFM imported successfully')"
        python -c "from ttsfm import TTSClient; print('TTSClient imported successfully')"

  build:
    needs: test
    runs-on: ubuntu-latest

    steps:
    - uses: actions/checkout@v4

    - name: Set up Python
      uses: actions/setup-python@v4
      with:
        python-version: '3.11'

    - name: Install build dependencies
      run: |
        python -m pip install --upgrade pip
        pip install build twine

    - name: Build package
      run: |
        python -m build

    - name: Check package
      run: |
        twine check dist/*
        ls -la dist/

    - name: Upload build artifacts
      uses: actions/upload-artifact@v3
      with:
        name: dist
        path: dist/

  release:
    needs: build
    runs-on: ubuntu-latest

    steps:
    - uses: actions/checkout@v4

    - name: Download build artifacts
      uses: actions/download-artifact@v3
      with:
        name: dist
        path: dist/

    - name: Publish to PyPI
      uses: pypa/gh-action-pypi-publish@release/v1
      with:
        password: ${{ secrets.PYPI_API_TOKEN }}

    - name: Create GitHub Release
      uses: softprops/action-gh-release@v1
      with:
        body: |
          ## TTSFM ${{ github.ref_name }}

          Automated release of TTSFM package.

          ### Installation
          ```bash
          pip install ttsfm
          ```

          ### Features
          - Text-to-Speech API client with OpenAI compatibility
          - Support for multiple voices and audio formats
          - Async and sync interfaces
          - Web interface for testing
        draft: false
        prerelease: false
